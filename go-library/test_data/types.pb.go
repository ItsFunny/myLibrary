// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types.proto

package test_data

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BitArrayProto struct {
	Bits                 int64    `protobuf:"varint,1,opt,name=bits,proto3" json:"bits,omitempty"`
	Elems                []uint64 `protobuf:"varint,2,rep,packed,name=elems,proto3" json:"elems,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BitArrayProto) Reset()         { *m = BitArrayProto{} }
func (m *BitArrayProto) String() string { return proto.CompactTextString(m) }
func (*BitArrayProto) ProtoMessage()    {}
func (*BitArrayProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}

func (m *BitArrayProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BitArrayProto.Unmarshal(m, b)
}
func (m *BitArrayProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BitArrayProto.Marshal(b, m, deterministic)
}
func (m *BitArrayProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BitArrayProto.Merge(m, src)
}
func (m *BitArrayProto) XXX_Size() int {
	return xxx_messageInfo_BitArrayProto.Size(m)
}
func (m *BitArrayProto) XXX_DiscardUnknown() {
	xxx_messageInfo_BitArrayProto.DiscardUnknown(m)
}

var xxx_messageInfo_BitArrayProto proto.InternalMessageInfo

func (m *BitArrayProto) GetBits() int64 {
	if m != nil {
		return m.Bits
	}
	return 0
}

func (m *BitArrayProto) GetElems() []uint64 {
	if m != nil {
		return m.Elems
	}
	return nil
}

type BitArrayProto2 struct {
	Bits                 int64    `protobuf:"varint,1,opt,name=bits,proto3" json:"bits,omitempty"`
	Elems                []uint64 `protobuf:"varint,2,rep,packed,name=elems,proto3" json:"elems,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BitArrayProto2) Reset()         { *m = BitArrayProto2{} }
func (m *BitArrayProto2) String() string { return proto.CompactTextString(m) }
func (*BitArrayProto2) ProtoMessage()    {}
func (*BitArrayProto2) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}

func (m *BitArrayProto2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BitArrayProto2.Unmarshal(m, b)
}
func (m *BitArrayProto2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BitArrayProto2.Marshal(b, m, deterministic)
}
func (m *BitArrayProto2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BitArrayProto2.Merge(m, src)
}
func (m *BitArrayProto2) XXX_Size() int {
	return xxx_messageInfo_BitArrayProto2.Size(m)
}
func (m *BitArrayProto2) XXX_DiscardUnknown() {
	xxx_messageInfo_BitArrayProto2.DiscardUnknown(m)
}

var xxx_messageInfo_BitArrayProto2 proto.InternalMessageInfo

func (m *BitArrayProto2) GetBits() int64 {
	if m != nil {
		return m.Bits
	}
	return 0
}

func (m *BitArrayProto2) GetElems() []uint64 {
	if m != nil {
		return m.Elems
	}
	return nil
}

func (m *BitArrayProto2) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*BitArrayProto)(nil), "tendermint.libs.bits.BitArrayProto")
	proto.RegisterType((*BitArrayProto2)(nil), "tendermint.libs.bits.BitArrayProto2")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_d938547f84707355) }

var fileDescriptor_d938547f84707355 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x8f, 0x31, 0x4f, 0x80, 0x30,
	0x10, 0x85, 0x83, 0xa0, 0x89, 0x35, 0x3a, 0x10, 0x06, 0x46, 0xc2, 0xc4, 0xd4, 0x4b, 0x74, 0x72,
	0x94, 0xc5, 0xb8, 0x18, 0xc3, 0xe8, 0x46, 0xe1, 0x80, 0x26, 0xb4, 0x25, 0x77, 0xc7, 0xc0, 0xbf,
	0x37, 0xad, 0x93, 0x9b, 0xdb, 0xbb, 0xbb, 0xf7, 0xe5, 0xf2, 0xa9, 0x07, 0xb9, 0x0e, 0x64, 0x7d,
	0x50, 0x90, 0x50, 0x56, 0x82, 0x7e, 0x46, 0x72, 0xd6, 0x8b, 0xde, 0xad, 0x61, 0x6d, 0xac, 0x70,
	0xfb, 0xaa, 0x1e, 0x7b, 0x2b, 0x6f, 0x44, 0xe3, 0xf5, 0x95, 0x6a, 0xa5, 0x2a, 0xe2, 0xa1, 0xce,
	0x9a, 0xac, 0xcb, 0x87, 0x94, 0xcb, 0x4a, 0xdd, 0xe2, 0x8e, 0x8e, 0xeb, 0x9b, 0x26, 0xef, 0x8a,
	0xe1, 0x77, 0x68, 0x3f, 0xd5, 0xd3, 0x1f, 0xf4, 0xf9, 0xff, 0x6c, 0x6c, 0xfa, 0xd1, 0x61, 0x9d,
	0x37, 0x59, 0x77, 0x3f, 0xa4, 0xdc, 0x7f, 0x7c, 0xbf, 0xaf, 0x56, 0xb6, 0xd3, 0xe8, 0x29, 0x38,
	0xd8, 0xae, 0x03, 0x69, 0xc7, 0x79, 0x45, 0x82, 0x65, 0x34, 0x64, 0x27, 0x08, 0x34, 0x23, 0x21,
	0xc1, 0x14, 0x3c, 0xa3, 0xe7, 0x93, 0xc1, 0x2c, 0x02, 0xc9, 0xce, 0x9c, 0x0b, 0x43, 0xb4, 0x82,
	0xf8, 0xd4, 0xdc, 0xa5, 0xe5, 0xcb, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc4, 0x19, 0xdb, 0xfa,
	0x01, 0x01, 0x00, 0x00,
}
